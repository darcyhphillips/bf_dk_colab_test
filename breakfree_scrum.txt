DescriptionTo manage technical work and determine priority for stakeholders, it all begins with Scrum. We’ve developed our own Scrum standards and best practices, which we use to ensure Agile delivery within BreakFree teams and teach our clients to use. When clients are working on product, we start with Scrum to establish and enforce the necessary practices to work in an Agile environment, such as thinking in small iterations, planning “just in time,” collaborating on backlog items and work to be completed, and allowing stakeholders to participate and have visibility. The BreakFree WayWhether you’re an individual contributor, a team member (such as a Senior Architect or Senior Solutions Engineer), or a team leader (such as a Product Owner), BreakFree Scrum is something everyone needs to intimately understand. BreakFree Scrum represents the way we engage with clients and how they perceive our engagement standards. The details highlighted in this section are what clients have often come to refer to as “The BreakFree Way.” Before you read this section of the Delivery Kit, understand that the BreakFree Scrum isn't necessarily all BreakFree-developed approaches, but a thoughtful combination of industry practices that we’ve enhanced with our real-world experience integrating Scrum and training others in the methodology. Additionally, BreakFree Scrum is not 100% complete. We’re always learning and enhancing our ways; when we talk about managing stakeholder work, it is ever evolving. You may notice that there are other industry practices or methods not mentioned within this section—that doesn’t mean those methods are inherently wrong, rather we’re using this section to articulate our best way to manage technical work and priority with the most proven success. Using this Framework as a BreakFree ClientWhen clients adopt these practices it means they’ve made significant progress toward becoming a digitally capable IT organization. If companies repeat the execution of the Agile work management functions in this Delivery Kit, they will have operationalized a key component of becoming digitally capable. That’s why BreakFree Scrum is the first thing we teach our clients. Additionally, we find that BreakFree Scrum is something that sticks with clients after their BreakFree engagement has ended. Using this Framework as a BreakFree MemberTools, templates and other guidance for how we do BreakFree Scrum is housed here. Unless you’re a long-time senior member, come here to begin using all things Scrum, and strive toward participating in BreakFree Scrum to get the most success out of engagements. Plus, if you are a more senior then use these tools to exemplify and teach others what the best Scrum looks like. Here are the fundamentals: Fundamental ScrumWithin the Agile portion of the Delivery Kit, we touch on many non-prescriptive functions having to do with how we may execute, coach, and deliver Agile capabilities to our clients. Your approach will certainly vary from client to client, but there is a fundamental philosophy that does NOT change per client! Here at BreakFree, our goal is to help our clients understand that their optimal velocity can only be achieved by equipping themselves with self-managed Scrum teams that are laser-focused on the incremental improvement of a product. These teams are built upon a very specific set of prescriptive guardrails. We need to teach teams "fundamental Scrum" as soon as possible and that can be done in a simple conversation about "3 roles and 5 meetings or events."The Three RolesRoleRole DescriptionDev Team MembersThe product vision movers. These are the people doing the work involved in building and/or improving a product. As part of a Scrum team, the dev team members learn and practice how to self-organize and what it takes to be cross-functional. When they reach a sufficient level of this kind of maturity, they continue to nurture a strong sense of curiosity that fuels their creativity and ability to find new and improved solutions that turn product visions into functioning, consistent, valuable products. Product Owner (PO)The product vision creator. This person clearly expresses the product vision to the team and articulates it in the form of product backlog items that they then organize and prioritize so the dev team knows exactly what work they need to focus on during each sprint. That is how the PO optimizes the value of the work the development team performs. Scrum MasterThe coach, the servant leader, the Agile advocate. This person works with the team to help them understand the purpose of the three Scrum roles and five meetings, find their own pace in practicing fundamental Scrum, and, in due time, reach cross functionality, practice self organization, and become a highly-functional team.  The Five EventsActivityActivity Description* Daily-StandupThe dev team meets for 15 minutes (or less) every day to inspect progress toward the Sprint Goal and adapt the product and process. They describe to each other how their own work is going, ask for help when needed, and consider whether they are still on track to meet the Sprint Goal. Each team member quickly states: Here's what I did yesterday, here's what I'll do today, I am blocked on/not blocked. * Sprint RefinementThe team meets to refine stories until they are "Sprint Ready." This involves effort estimate, requirements clarification, and decomposing large backlog items into smaller ones (user stories). This is just enough planning for the team to stay focused on the Sprint Goal(s) and clear on the work that needs to be done in the upcoming sprint. * Sprint PlanningThe entire Scrum Team collaborates and discusses the desired high-priority work for the upcoming sprint and defines the Sprint Goal. The Product Owner describes the objective of the sprint and answers questions from the dev team about execution and acceptance criteria. * Sprint ReviewThe focus is specifically on the potentially shippable product increment created during the sprint. The primary purpose is to inspect and adapt based on the discussion with the stakeholders. * Sprint Retrospective BFThe team has private, honest conversations focused on the collaboration and processes used during the sprint and makes tangible action items for improvement in the upcoming sprint. This is the most important event. Team Supporting Scrum Tools* Team CapacityCapacity is the measure of availability of each team member. During team kickoff activities, the PO works together with the client sponsor to obtain each team members' expected capacity for the duration of the upcoming project.* Sprint Goal SettingIn order to get the team rallying and working together as a group, at least one sprint goal needs to be set. A sprint goal needs to be achievable within one sprint iteration. One sprint goal (per sprint) would be ideal, but most of the time this won't be possible, 2-5 sprint goals per sprint is typical.* Sprint BurndownSprint burndown provides the team a view of the progress towards completion of the sprint goals. The product owner tracks the sprint burndown every day and shows the team via a graph during the daily stand-up meeting.* ForecastingForecasting will allow us to better communicate with stakeholders and help explain why they should continue to fund us and for how long. The PO of the team starts forecasting within the first 3-6 sprints.* Creating and Maintaining Definition of DoneAgreement on the team for what tasks need to happen or states met in order to call a PBI "Done". You will create a Definition of Done with the team before your first Sprint Planning meeting.* Work Identification, Intake, and EntryAny information received that requires a team member to create a new backlog item should be sent to the PO for approval and review. Modifying a pre-existing PBI, prompted by new information or understanding, should infuse this knowledge into the backlog. PBIs should always reflect our latest information and understanding of that item!* Team VelocityTracking velocity provides the team with a strategy to measure their own success.Note: A self-managed team that understands the purpose of each of the five events does not require a Scrum Master to run or host these events. Pitfalls* Adding roles beyond the three Scrum roles. Any team roles not mentioned in the list above should be carefully discussed before augmenting the team. In an effort to discourage short-circuiting the Scrum process and to promote cross functionality, most new team members should consider their role to be "Dev Team Member." However, in some rare cases we need to do what makes sense given the constraints in place at the client, eg. sometimes adding a Business Analyst or Security Representative role to the team is unavoidable.* Installing a "Product Manager" onto the team. This is a big red flag and should be avoided at all costs. Refer to the description of the "Product Owner" above.* Adding events beyond the five Scrum events. Any meeting not specified as a Scrum event in the list above should be carefully examined as it may be an unnecessary interruption to the Scrum flow, especially when the purpose of the meeting does not specifically relate to the team achieving their current Sprint Goals.  Remember: Scrum is usually the answer, and the answer will almost always involve coaching the team on the purpose of these fundamentals. Watch for Dev Team Members, Product Owners, and Scrum Masters who do not truly understand the fundamentals of the Scrum framework. Also, potential "fixes" can easily become noisy distractions if the team doesn't understand the purpose of these three roles and five events. The Scrum Master (at times in collaboration with the Product Owner) needs to shield the dev team from unnecessary meetings outside the Scrum events and any other distractions disguised as "fixes."